//example node app to run OMG.JS Library 
//IMPORTANT: Do not store Privatekey as strings in production apps


let childChainPort = "http://35.200.30.83:9656"
let childChainLocal = "http://localhost:9656"


//let alicePriv = Buffer.from( new Uint8Array([165, 253, 5, 87, 255, 90, 198, 97, 236, 75, 74, 205, 119, 102, 148, 243, 213, 102, 3, 104, 36, 251, 206, 152, 50, 114, 92, 65, 154, 84, 48, 47]))
//let alicePriv = "0xe855f62021dc303c351d351c310d1818f6974f590a76c29d40e31285f60c69a1"


const amount1 = 7
const amount2 = 3
const blknum1 = 3278001
const blknum2 = 0
const oindex1 = 0
const oindex2 = 0
const txindex1 = 0
const txindex2 = 0
const cur12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

//const newowner1 = [116, 90, 78, 212, 118, 51, 233, 165, 245, 155, 19, 234, 50, 191, 20, 131, 178, 219, 41, 65]
const newowner1 = "0x2fb4312f6bef40d1e1f4395a8c402e143a114d9e"
//const newowner2 = [101, 166, 194, 146, 88, 167, 6, 177, 55, 187, 239, 105, 27, 233, 12, 165, 29, 47, 182, 80]
const newowner2 = "0x53372da859f9b2d66c5f8be20238c6a12891a10c"
const _inputs = [{blknum1, txindex1, oindex1},{blknum2, txindex2, oindex2}]

const _currency = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

const _outputs = [{newowner1, amount1},{newowner2, amount2}]


const OMG = require('../omg')
const Omg = new OMG(childChainLocal)

//Omg.sendTransaction(_inputs, _currency, _outputs, alicePriv)
//console.log(_inputs, _currency, _outputs, alicePriv)

let inputz_1 = { blknum1: 12850000, txindex1: 0, oindex1: 1 }
let inputz_2 = { blknum2: 0, txindex2: 0, oindex2: 0 }
let currz = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
let ownerz = [ 
    { newowner1: '0xc8ce77d46855593f3ec40ffe235d15a29443eede', amount1: 1 },
    { newowner2: '0x0b547a50e73f3b91741539ede4474ed1d36522e9', amount2: 6 } 
]
let alicePriv = "0xe855f62021dc303c351d351c310d1818f6974f590a76c29d40e31285f60c69a1"

Omg.sendTransaction([inputz_1, inputz_2], currz , ownerz, alicePriv)

/*
//F8D0830E05D8808080808094000000000000000000000000000000000000000094C8CE77D46855593F3EC40FFE235D15A29443EEDE05940B547A50E73F3B91741539EDE4474ED1D36522E902B8417542BCCD2FD4FBB0BC1E5A87A6FBF62ACBF36E8D77FB36B4483EBE69434A80DB1A000D5E286338517E214BC81410FD3C6D883708C632D585B1DAB49A249C0F201BB8410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

//F8D0830E05D8808080808094000000000000000000000000000000000000000094C8CE77D46855593F3EC40FFE235D15A29443EEDE05940B547A50E73F3B91741539EDE4474ED1D36522E902B8417542BCCD2FD4FBB0BC1E5A87A6FBF62ACBF36E8D77FB36B4483EBE69434A80DB1A000D5E286338517E214BC81410FD3C6D883708C632D585B1DAB49A249C0F201BB8410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
curl "http://localhost:9656" -d '{"params":{"transaction": "F8D0830E05D8808080808094000000000000000000000000000000000000000094C8CE77D46855593F3EC40FFE235D15A29443EEDE05940B547A50E73F3B91741539EDE4474ED1D36522E902B8417542BCCD2FD4FBB0BC1E5A87A6FBF62ACBF36E8D77FB36B4483EBE69434A80DB1A000D5E286338517E214BC81410FD3C6D883708C632D585B1DAB49A249C0F201BB8410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}, "method": "submit", "jsonrpc": "2.0","id":0}'

F8D0830E05D8808080808094000000000000000000000000000000000000000094C8CE77D46855593F3EC40FFE235D15A29443EEDE05940B547A50E73F3B91741539EDE4474ED1D36522E902B8417542BCCD2FD4FBB0BC1E5A87A6FBF62ACBF36E8D77FB36B4483EBE69434A80DB1A000D5E286338517E214BC81410FD3C6D883708C632D585B1DAB49A249C0F201BB8410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
F8D0830E05D8808080808094000000000000000000000000000000000000000094C8CE77D46855593F3EC40FFE235D15A29443EEDE05940B547A50E73F3B91741539EDE4474ED1D36522E902B8417542BCCD2FD4FBB0BC1E5A87A6FBF62ACBF36E8D77FB36B4483EBE69434A80DB1A000D5E286338517E214BC81410FD3C6D883708C632D585B1DAB49A249C0F201BB8410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

*/